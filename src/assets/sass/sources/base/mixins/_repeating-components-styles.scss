// Ripple effect
@mixin ripple(
  $border-radius: $border-radius-medium,
  $color: $color-general,
) {
  &:after {
    content: ' ';
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
    border-radius: $border-radius;
    background-color: rgba($color, .15);
    transition: color, opacity, .15s ease-in-out;
    opacity: 0;
  }

  &:hover,
  &:focus {
    &:after {
      opacity: 0.6;
    }
  }

  &:active {
    &:after {
      opacity: 0.8;
    }
  }
}

// Menu link
@mixin menu-item() {
  position: relative;
  display: flex;
  border-radius: $border-radius-medium;
  padding: 12px 10px 10px;
  transition: background, color .15s ease-out;

  &:link,
  &:visited {
    color: $color-black;
  }

  &:hover,
  &:focus {
    color: rgba($color-general, 0.85);
    background: rgba($color-general, 0.08);
  }

  &:active {
    color: rgba($color-general, 0.75);
    background: rgba($color-general, 0.15);
  }

  &.__current {
    color: $color-general;
    background: rgba($color-general, 0.15);
  }
}

// Panel
@mixin panel($display: 'block', $padding: '10px') {
  display: $display;
  width: 100%;
  background-color: $color-white;
  box-shadow: $shadow-for-panel;
  border-radius: $border-radius-regular;
  border: 1px solid $color-gray-soft;
  padding: unquote($padding);
  position: relative;
}

// Close or menu button
@mixin close-button($right: 10px, $top: 50%, $color: $color-general) {
  position: absolute;
  top: $top;
  right: $right;
  z-index: 6;
  transform: translateY(-50%);
  font-size: 20px;
  color: $color-gray;
  transition: color .15s ease-in-out;

  .fa {
    line-height: normal;
    vertical-align: -1px;
  }

  &.active,
  &:hover {
    color: $color;
  }
}

// Flat accordion
@mixin flat-accordion($class) {
  $arrow-button-size: 25px;

  .no-#{$class} {
    padding: 4px 0;
    color: $color-gray;
  }

  .#{$class}-accordion {
    min-width: 200px;
    box-sizing: border-box;

    $c: &;

    &__header,
    &__body {
      width: 100%;
    }

    &__header {
      padding-right: $arrow-button-size + 5px;
      position: relative;
    }

    &__body {
      padding-top: 10px;
      border-top: 1px solid rgba($color-black, 0.15);
    }

    &__arrow {
      height: $arrow-button-size;
      width: $arrow-button-size;
      font-size: 14px;
      color: $color-general;
      line-height: $arrow-button-size + 2;
      text-align: center;
      border-radius: 50%;
      position: absolute;
      top: 2px;
      right: 0;
      z-index: 1;
      background-color: rgba($color-general, .15);
      transition: background-color .15s linear;

      .fa {
        opacity: .75;
        transition: opacity .15s linear;
      }
    }

    &:hover {
      #{$c}__arrow {
        background-color: rgba($color-general, .25);

        .fa {
          opacity: 1;
        }
      }
    }

    &--open {
      #{$c}__header {
        padding-bottom: 10px;
      }

      #{$c}__arrow {
        transform: scale(1, -1);
      }
    }
  }
}

@mixin list-item-as-filter-button {
  cursor: pointer;
  padding: 4px 5px 4px 15px;
  border-radius: $border-radius-regular;

  &::before {
    top: 11px;
    left: 5px;
  }

  &.__active,
  &:hover {
    color: $color-general;
    background-color: rgba($color-general, .15);
  }
}

// Modal window
@mixin modal-window($class) {
  .#{$class}-modal {
    &__header,
    &__cover,
    &__body {
      width: 100%;
      box-sizing: border-box;
    }

    &__header {
      position: relative;
      padding-right: 40px;
      margin-bottom: 15px;

      .close-button {
        @include close-button(-10px);
      }
    }

    &__cover {
      margin-bottom: 10px;

      img {
        width: 100%;
        height: auto;
      }
    }

    &__body {
      line-height: $font-line-height;
    }
  }
}

// Simple gene list item
@mixin simple-gene-list-item($class) {
  .#{$class} {
    display: block;
    width: 100%;
    background-color: $color-white;
    box-shadow: $shadow-for-panel;
    border-radius: $border-radius-regular;
    padding: 10px 15px;
    position: relative;
    font-size: $font-size;

    &__title {
      margin: 10px 0;
      padding-right: 30px;
      font-size: $font-size-big;

      .tag {
        margin: 0 8px 0 0;
      }

      .tag, .link {
        vertical-align: middle;
      }
    }

    &__share{
      position: absolute; // чтобы элемент перестал быть родителем
      top: 12px;
      right: 40px;
    }

    &__actions {
      position: absolute; // чтобы элемент перестал быть родителем
      top: 12px;
      right: 12px;
      z-index: 1;

      .fa {
        color: $color-base;
      }
    }
  }

  .#{$class} + .#{$class} {
    margin-top: 15px;
  }
}

@mixin material-sort-header-fix($class: '.filter') {
  #{$class} {
    padding-right: 8px;
    max-width: 100%;

    ::ng-deep .mat-sort-header-container {
      opacity: .75;

      &.mat-sort-header-sorted {
        font-weight: $font-weight-medium;
        opacity: 1;
      }
    }
  }
}

@mixin copy-field(
  $input-size: 40px,
  $color: $color-general,
  $text-color: $color-general,
  $text-color-h: $color-general-dark) {
  position: relative;
  width: 100%;
  color: $text-color;

  input {
    display: block;
    appearance: none;
    outline: none;
    border: 1px solid transparent;
    width: 100%;
    height: $input-size;
    background-color: rgba($color, .10);
    border-radius: $input-size;
    padding: 0 $input-size 0 $padding-medium;
    color: inherit;
    font-family: 'Roboto', 'sans-serif';
    font-size: $font-size-smaller;

    &:focus {
      border-color: rgba($color, .25);
    }
  }

  button {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 1;
    height: $input-size;
    width: $input-size;
    line-height: $input-size;
    text-align: center;
    color: inherit;

    &:hover {
      color: $text-color-h;
    }

    @include ripple($input-size);
  }
}

@mixin gene-name {
  .title {
    font-size: $font-size-bigger;
    font-weight: $font-weight-medium;
    color: $color-gray;
    min-width: 200px;
    padding: 15px 0 5px 0;
    line-height: 1;

    .link {
      font-weight: $font-weight-medium;
      cursor: pointer;
      position: relative;
      vertical-align: middle;
      margin-right: 5px;
      text-decoration: underline;
      color: mix($color-gray, $color-general, 90%);

      &:hover,
      &:active {
        color: darken(mix($color-gray, $color-general, 90%), 10%);
      }
    }

    b {
      color: $color-black;
      font-weight: bold;
    }
  }
}

@mixin mat-form-field-customization() {
  &::ng-deep {
    app-eye-checkbox {
      margin-left: -2px;
    }

    .mat-form-field-wrapper {
      padding-bottom: 0;
    }

    .mat-form-field-prefix {
      top: -0.4em;
      margin-left: -6px;
    }

    .mat-form-field-underline {
      display: none;
    }

    .mat-form-field-flex {
      border-radius: $border-radius-regular;
      background-color: rgba($color-general, .10);
    }

    .mat-select-arrow-wrapper {
      height: 1em;
    }
  }
}

@mixin filter-panel {
  :host {
    max-width: 100%;
    display: block;
  }

  .filters-modal__body {
    font-size: 0; // inline-blocks fix
  }

  .disabled {
    pointer-events: none;
    user-select: none;
    opacity: .85;
  }

  .body__row {
    position: relative;
    display: inline-flex;
    width: 100%;
    font-size: 11px; // regulates mat-select size
    margin-bottom: 10px;

    mat-form-field {
      width: 100%;
      max-width: 100%;
    }

    @include mat-form-field-customization();

    &--checkbox {
      align-items: center;

      .checkbox {
        font-size: 1.2em;
      }
    }
  }

  .body__title {
    position: relative;
    display: inline-block;
    width: 100%;
    font-size: $font-size-small;
    color: $color-gray;
    margin-bottom: .5em;

    &::after {
      content: ' ';
      display: none;
      width: 100%;
      height: 1px;
      position: absolute;
      bottom: -4px;
      background-color: $color-borders;
    }
  }

  .separator {
    width: 100%;
    height: 0;
    border-top: 1px solid $color-borders;
    margin: 0 0 10px 0;
  }

  .reset-button-wrapper {
    width: 100%;

    .reset-button {
      width: 100%;
      margin: 0 auto;
    }
  }

  :host-context(.filters-modal) {
    .filters-modal__body {
      display: grid;
      align-content: space-between;
      align-items: center;
      justify-items: start;
      grid-gap: 10px;
      justify-content: center;

      .body__row {
        margin-bottom: 0;
      }

      @include resolution_tablet-and-up {
        grid-template-columns: 1fr 1fr;

        .separator,
        .reset-button-wrapper {
          grid-column-start: 1;
          grid-column-end: 3;
        }

        .body__title {
          grid-column: 1 / -1;
          &::after {
            display: block;
          }
        }
      }

      @include resolution_smartphone {
        grid-template-columns: 1fr;

        .separator,
        .reset-button-wrapper {
          grid-column-start: 1;
          grid-column-end: 2;
        }
      }
    }
  }

  // Multiline select option
  mat-option.mat-option {
    align-items: flex-start;
    height: auto;
    white-space: normal;
    line-height: normal;
    padding: 1em;
  }
  .search-bar {
    position: sticky;
    top: 0;
    z-index: 100;
    height: 40px;
    padding: 2px;
    background-color: $color-general-200;

    &__input {
      width: 100%;
      height: 100%;
      padding: 10px;
      border: none;
    }
  }
}

@mixin hide-scrollbar {
  // IE, Edge, FF
  //-ms-overflow-style: none;
  //scrollbar-width: none;

  // Chrome, Safari, Opera
  //&::-webkit-scrollbar {
  //  display: none;
  //}
}
// TODO: Customize scrollbar instead of hiding it

@mixin scrollable-container($bg-color: $color-white) {
  .view {
    position: relative;
    max-width: 100%;

    &,
    &__content {
      width: 100%;
    }

    &__fadeout {
      display: block;
      position: absolute;
      top: 0;
      bottom: 0;
      z-index: 10;
      pointer-events: none;
      width: 24px;

      &--r {
        right: 0;
        background: linear-gradient(to right, rgba($bg-color, 0) 0, $bg-color 100%);
      }

      &--l {
        left: 0;
        background: linear-gradient(to left, rgba($bg-color, 0) 0, $bg-color 100%);
      }

      &--hidden {
        visibility: hidden;
      }
    }
  }
}

@mixin study-type-mark-pseudo() {
  &::before {
    content: ' ';
    display: block;
    height: 12px;
    width: 12px;
    border-radius: 50%;
    margin-right: 10px;
    background: #cbcbef;
    position: absolute;
    top: 2px;
    left: 2px;
    border: .5px solid rgba($color-black, .15);
  }

  @each $class, $color in $experiment-tables {
    &--#{$class}::before {
      background: $color;
    }
  }
}



